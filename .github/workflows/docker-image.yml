name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    #Versionamiento semantico automatico
    - name: Git Semantic Version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        major_pattern: "major:"
        minor_pattern: "feature:"
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
      id: version
      
    # Autentificacion en docker hub mediante token (docker login -u USER -p TOKEN)
    - name: docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}    
      run: |
        echo "New Version: $NEW_VERSION !!!"
        echo "iniciando login"
        docker login -u $DOCKER_USER -p $DOCKER_PASS
        echo "fin del login" 
        
    # Construcion de imagen docker
    - name: build docker image
      env:    
        NEW_VERSION: ${{ steps.version.outputs.version }}   
      run: |
        docker build -t sinhuesiordia/docker-graphql:$NEW_VERSION .
        docker build -t sinhuesiordia/docker-graphql:latest .

    - name: push docker image
      env:    
        NEW_VERSION: ${{ steps.version.outputs.version }}    
      run: |
        docker push sinhuesiordia/docker-graphql:$NEW_VERSION
        docker push sinhuesiordia/docker-graphql:latest
        
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
